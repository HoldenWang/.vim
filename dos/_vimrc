" Vim with all enhancements
source $VIMRUNTIME/vimrc_example.vim

" Use the internal diff if available.
" Otherwise use the special 'diffexpr' for Windows.
if &diffopt !~# 'internal'
  set diffexpr=MyDiff()
endif
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg1 = substitute(arg1, '!', '\!', 'g')
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg2 = substitute(arg2, '!', '\!', 'g')
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  let arg3 = substitute(arg3, '!', '\!', 'g')
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      if empty(&shellxquote)
        let l:shxq_sav = ''
        set shellxquote&
      endif
      let cmd = '"' . $VIMRUNTIME . '\diff"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  let cmd = substitute(cmd, '!', '\!', 'g')
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3
  if exists('l:shxq_sav')
    let &shellxquote=l:shxq_sav
  endif
endfunction

set guifont=Consolas:h14
colorscheme desert
" basic
set nocompatible  
set nu
set relativenumber
set cursorline
set cursorcolumn
syntax enable
syntax on
set scrolloff=5
set showcmd
set wildmenu  
set ruler
set wrap

" indent 
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set smarttab
set smartindent  "set autoindent "will confuse the paste rel
" 显示tab和行尾的空格
set list
set listchars=tab:>-,trail:-

" search
set hlsearch
exec "nohlsearch"
set incsearch
set ignorecase
set smartcase

" plug
"let mapleader='\' " default is '\'
call plug#begin('~/.vim/plugged')
    Plug 'vim-airline/vim-airline'
    Plug 'scrooloose/nerdtree'
    Plug 'connorholyday/vim-snazzy'
    Plug 'majutsushi/tagbar', { 'off': 'TagbarOpenAutoClose' }
call plug#end()

map tt :NERDTreeToggle<CR>
nmap <Leader>n :NERDTreeToggle D:\Project\<CR>
nmap <Leader>t :TagbarToggle<CR>
nmap <Leader>c :color snazzy<CR>
nmap <Leader>q :qa!<CR>
"autocmd vimenter * NERDTree
"highlight Directory guifg=#191970 ctermfg=blue
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

"noremap W :wq<CR>
noremap Q :qa!<CR>

"color snazzy
"let ayucolor="light"
let g:SnazzyTransparent = 1
set background=dark

noremap J <nop>
nmap H <C-w>h
nmap J <C-w>j
nmap K <C-w>k
nmap L <C-w>l

" split 
"set splitright
set splitbelow
map <up> :res +5<CR>
map <down> :res -5<CR>
map <left> :vertical resize-5<CR>
map <right> :vertical resize+5<CR>
" tab
nmap tm :tabe $MYVIMRC<CR>
"nmap tm :tabe ~/.vimrc<CR>
nmap tn :tabe<CR>
nmap tc :tabclose<CR>
nmap so :source $MYVIMRC<CR>
"autocmd BufWritePost $MYVIMRC source $MYVIMRC "让vimrc配置变更立即生效'
set paste
" map tn :tabn<CR> gT gt
"
set showmatch  "高亮显示(set noshowmatch不显示){, }, (, ), [, 或者 ] 的匹配情况

" startup size
set lines=60
set columns=120
autocmd GUIEnter * simalt ~x
set fileencodings=utf-8,gb2312,gb18030,gbk,ucs-bom,cp936,latin1
"set encoding=utf-8
if strftime("%H") < 12
  "set background=light
  colorscheme desert
  "colorscheme peachpuff
else
  "set background=dark
  colorscheme desert
endif
